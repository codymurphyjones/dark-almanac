"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/o8c38ioXUuz
 */

//Background: #1F2937
// Main: #008087
// Secondary: #8BD77E
// Accent: #25AE8D
// Alert: #F9F871
import Link from "next/link";
import Image from "next/image";
import {
  useAttributeValues,
  DisplayStats,
  StatEditor,
} from "@Component/StatEditor";

//import { useAttributeValues } from "../../lib/hooks";

export default function Component() {
  const attributes = useAttributeValues();
  return (
    <div className="dark flex flex-col min-h-screen bg-gray-900 text-white">
      <header className="px-4 lg:px-6 h-14 flex items-center">
        <Link className="flex items-center justify-center" href="#">
          <Image height={40} width={40} src="logo.svg" alt="logo" />
          <span className="ml-2 text-xl font-bold">Dark Almanac</span>
        </Link>
        <nav className="ml-auto flex gap-4 sm:gap-6">
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            About
          </Link>
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Articles
          </Link>
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Contact
          </Link>
        </nav>
      </header>
      <main className="flex flex-1 bg-gray-800 h-full">
        <div className="flex flex-1 bg-gray-800 h-full">
          <div className="flex flex-1 p-4 w-full justify-between flex-col items-center lg:justify-content lg:items-start lg:flex-row">
            <div className="flex flex-col lg:max-w-1/3 m-2">
              <b>Class Selector/Perks</b>
              <div className="flex h-1/2 w-full items-center m-2">
                <div className="flex bg-blue-800 h-16 w-16 justify-center align-middle p-2"></div>
                <h2 className="m-2">Rogue</h2>
              </div>
              <div className="flex flex-wrap h-1/3 w-full mt-4 mb-8">
                <div className="flex h-1/2 w-1/2 justify-center items-center mt-2">
                  <div className="flex bg-green-800 h-24 w-24 justify-center align-middle"></div>
                </div>
                <div className="flex h-1/2 w-1/2 justify-center items-center mt-2">
                  <div className="flex bg-green-800 h-24 w-24 justify-center align-middle"></div>
                </div>
                <div className="flex h-1/2 w-1/2 justify-center items-center mt-2">
                  <div className="flex bg-green-800 h-24 w-24 justify-center align-middle"></div>
                </div>
                <div className="flex h-1/2 w-1/2 justify-center items-center mt-2">
                  <div className="flex bg-green-800 h-24 w-24 justify-center align-middle"></div>
                </div>
              </div>
              <div className="flex">
                <StatEditor attributes={attributes} />
              </div>
            </div>
            <div className="flex flex-1 h-full w-full min-w-[260px] lg:max-w-1/3 lg:w-1/3 m-2">
              <EquipmentDisplay />
            </div>
            <div className="w-full lg:max-w-1/3 lg:w-1/3 m-2">
              <div className="flex-1 grow">
                <span className="p-1 bg-green-800">Details</span>
                <span className="p-1 bg-orange-200">Physical Damage</span>
                <span className="p-1 bg-blue-300">Magical Damage</span>
              </div>

              <div className="flex-1">
                <DisplayStats attributes={attributes} />
              </div>
            </div>
          </div>
        </div>
      </main>
      <footer className="flex flex-col gap-2 sm:flex-row py-6 w-full shrink-0 items-center px-4 md:px-6 border-t border-gray-800">
        <p className="text-xs text-gray-500">
          Â© 2024 Game Theory Craft. All rights reserved.
        </p>
        <nav className="sm:ml-auto flex gap-4 sm:gap-6">
          <Link className="text-xs hover:underline underline-offset-4" href="#">
            About Us
          </Link>
          <Link className="text-xs hover:underline underline-offset-4" href="#">
            Contact
          </Link>
          <Link className="text-xs hover:underline underline-offset-4" href="#">
            Privacy Policy
          </Link>
        </nav>
      </footer>
    </div>
  );
}

/**
 * v0 by Vercel.
 * @see https://v0.dev/t/ydgoSU2IfFd
 */
//import { Button } from "@/components/ui/button"
import React from "react";
import { Z_VERSION_ERROR } from "zlib";

type ItemRarity =
  | "none"
  | "junk"
  | "common"
  | "uncommon"
  | "rare"
  | "epic"
  | "legendary"
  | "unique";

type EquipmentSlotProps = {
  rarity: ItemRarity;
  absolute?: boolean;
  absolutePosition?: TailwindPositionCoords[];
  children?: React.ReactElement | React.ReactElement[];
};

function getColorByRarity(rarity: ItemRarity) {
  if (rarity === "common") return "shadow-neutral-50";

  if (rarity === "uncommon") return "shadow-lime-500";
  if (rarity === "rare") return "shadow-blue-700";
  if (rarity === "epic") return "shadow-violet-900";
  if (rarity === "legendary") return "shadow-amber-600";
  if (rarity === "unique") return "shadow-yellow-200";

  return "";
}

function createDynamicPosition(type: string, value: string) {
  return `${type}-[${value}]`;
}

type PositionCoords = "top" | "bottom" | "left" | "right" | "w" | "h";
type TailwindPositionCoords = `${PositionCoords}-[${string}px]`;

const EquipmentSlot = (props: EquipmentSlotProps) => {
  let cssClassNames = `${props.absolute ? "absolute " : "relative"}${
    props.rarity !== "junk"
      ? " shadow-[0_0px_3px_1px_rgb(0,0,0)] " + getColorByRarity(props.rarity)
      : ""
  }`;

  cssClassNames +=
    " flex bg-zinc-700 border-2 border-stone-900 " +
    props.absolutePosition?.join(" ");
  let ogClass =
    "shadow-lime-500 shadow-[0_0px_3px_1px_rgb(0,0,0)] absolute flex bg-zinc-700 border-2 border-stone-900 left-[-100px] top-[-30px] w-[80px] h-[140px]";
  return <div className={cssClassNames}>{props.children}</div>;
};

const EquipmentDisplay = () => {
  return (
    <div className="flex flex-1 h-full w-full flex-col min-w-[250px] justify-center flex-wrap content-center gap-2">
      <EquipmentSlot
        rarity="uncommon"
        absolutePosition={["w-[80px]", "h-[80px]"]}
      >
        <EquipmentSlot
          absolute
          rarity="uncommon"
          absolutePosition={[
            "top-[-40px]",
            "right-[5px]",
            "w-[30px]",
            "h-[30px]",
          ]}
        />
        <EquipmentSlot
          absolute
          rarity="epic"
          absolutePosition={[
            "top-[-30px]",
            "right-[-100px]",
            "w-[80px]",
            "h-[140px]",
          ]}
        />

        <EquipmentSlot
          absolute
          rarity="unique"
          absolutePosition={[
            "top-[-30px]",
            "left-[-100px]",
            "w-[80px]",
            "h-[140px]",
          ]}
        />
      </EquipmentSlot>

      <EquipmentSlot
        rarity="uncommon"
        absolutePosition={["w-[80px]", "h-[140px]"]}
      >
        <EquipmentSlot
          absolute
          rarity="legendary"
          absolutePosition={[
            "bottom-[10px]",
            "right-[-90px]",
            "w-[80px]",
            "h-[80px]",
          ]}
        />
        <EquipmentSlot
          absolute
          rarity="uncommon"
          absolutePosition={[
            "bottom-[10px]",
            "left-[-90px]",
            "w-[80px]",
            "h-[80px]",
          ]}
        />
      </EquipmentSlot>
      <EquipmentSlot
        rarity="uncommon"
        absolutePosition={["w-[80px]", "h-[140px]"]}
      >
        <EquipmentSlot
          absolute
          rarity="uncommon"
          absolutePosition={["left-[-40px]", "w-[30px]", "h-[30px]"]}
        />
        <EquipmentSlot
          absolute
          rarity="uncommon"
          absolutePosition={["right-[-40px]", "w-[30px]", "h-[30px]"]}
        />
        <EquipmentSlot
          absolute
          rarity="uncommon"
          absolutePosition={[
            "bottom-[0px]",
            "right-[-90px]",
            "w-[80px]",
            "h-[80px]",
          ]}
        />
      </EquipmentSlot>
    </div>
  );
};

const EquipmentDisplay2 = () => {
  return (
    <div
      style={{
        display: "flex",
        minHeight: "50px",
        justifyContent: "center",
      }}
      className="flex justify-center"
    >
      <div
        style={{
          display: "flex",
          flexDirection: "column",
          backgroundColor: "blue",
          minHeight: "500px",
          minWidth: "150px",
          margin: "10px",
          justifyContent: "center",
          flexWrap: "wrap",
          alignContent: "center",
        }}
      >
        <div
          style={{
            display: "flex",
            backgroundColor: "green",
            height: "80px",
            width: "80px",
            margin: "10px",
          }}
        ></div>
        <div
          style={{
            display: "flex",
            backgroundColor: "orange",
            height: "140px",
            width: "80px",
            margin: "10px",
          }}
        ></div>
        <div
          style={{
            display: "flex",
            backgroundColor: "yellow",
            height: "140px",
            width: "80px",
            margin: "10px",
            justifyContent: "space-between",
          }}
        >
          <div
            style={{
              position: "relative",
              left: "-40px",
              display: "flex",
              backgroundColor: "purple",
              height: "30px",
              width: "30px",
            }}
          ></div>
          <div
            style={{
              position: "relative",
              right: "-40px",
              display: "flex",
              backgroundColor: "purple",
              height: "30px",
              width: "30px",
            }}
          ></div>
        </div>
      </div>
    </div>
  );
};
